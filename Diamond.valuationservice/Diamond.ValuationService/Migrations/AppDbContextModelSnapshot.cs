// <auto-generated />
using System;
using Diamond.ValuationService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diamond.ValuationService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Diamond.ValuationService.Models.DiamondSpec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CaratWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Clarity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fluorescence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Polish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proportions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symmetry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiamondSpecs");
                });

            modelBuilder.Entity("Diamond.ValuationService.Models.PriceTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BasePricePerCarat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CaratFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CaratTo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PriceTables");
                });

            modelBuilder.Entity("Diamond.ValuationService.Models.DiamondSpec", b =>
                {
                    b.OwnsOne("Diamond.ValuationService.Models.Measurements", "Measurements", b1 =>
                        {
                            b1.Property<Guid>("DiamondSpecId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("H")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("L")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("W")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("DiamondSpecId");

                            b1.ToTable("DiamondSpecs");

                            b1.WithOwner()
                                .HasForeignKey("DiamondSpecId");
                        });

                    b.Navigation("Measurements")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
