// <auto-generated />
using System;
using InvoiceService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceService.Infrastructure.Migrations
{
    [DbContext(typeof(InvoiceDbContext))]
    [Migration("20250912033404_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceService.Domain.Entities.Receipt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AppraiserId")
                        .HasColumnType("int");

                    b.Property<Guid?>("CaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EstimatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptNo")
                        .IsUnique();

                    b.ToTable("Receipts", (string)null);
                });

            modelBuilder.Entity("InvoiceService.Domain.Entities.Receipt", b =>
                {
                    b.OwnsOne("InvoiceService.Domain.ValueObjects.DiamondInfo", "Diamond", b1 =>
                        {
                            b1.Property<Guid>("ReceiptId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("CaratWeight")
                                .HasColumnType("decimal(6,2)")
                                .HasColumnName("Diamond_Carat");

                            b1.Property<string>("ClarityGrade")
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("Diamond_Clarity");

                            b1.Property<string>("ColorGrade")
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("Diamond_Color");

                            b1.Property<string>("CutGrade")
                                .HasMaxLength(16)
                                .HasColumnType("nvarchar(16)")
                                .HasColumnName("Diamond_CutGrade");

                            b1.Property<string>("ShapeCut")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasColumnName("Diamond_ShapeCut");

                            b1.HasKey("ReceiptId");

                            b1.ToTable("Receipts");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptId");
                        });

                    b.Navigation("Diamond")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
